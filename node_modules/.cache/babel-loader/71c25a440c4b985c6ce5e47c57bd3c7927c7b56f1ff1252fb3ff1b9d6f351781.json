{"ast":null,"code":"var _jsxFileName = \"F:\\\\FirstBiteSolutiuon ( FRN-06J0523013 )\\\\React\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import Navbar from './Navbar.js';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      // document.body.style.backgroundColor=\"#212529\";\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enable \", \"Success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enable \", \"Success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        aboutText: \"About\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter The Text Below ...\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"KuNBSw98V7ll4L0Jk1RojRjhEaM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","Alert","useState","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","path","heading","_c","$RefreshReg$"],"sources":["F:/FirstBiteSolutiuon ( FRN-06J0523013 )/React/textutils/src/App.js"],"sourcesContent":["import './App.css';\n// import Navbar from './Navbar.js';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js';\nimport { useState } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode,setMode]=useState('light'); // Whether dark mode is enable or not\n  const[alert , setAlert]=useState(null);\n \n  const showAlert= (message,type)=>{\n    setAlert({\n      msg:message,\n      type : type \n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500); \n  }\n  \n\n\n  const toggleMode=()=>{\n    if(mode ==='light')\n    {\n      setMode('dark');\n      // document.body.style.backgroundColor=\"#212529\";\n      document.body.style.backgroundColor=\"#042743\";\n      showAlert(\"Dark mode has been enable \" ,\"Success\");\n      document.title = \"TextUtils - Dark Mode\";\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enable \" ,\"Success\");\n      document.title = \"TextUtils - Light Mode\";\n\n\n    }\n  }\n  return (\n   <>\n    <Router>\n    <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter The Text Below ...\"mode={mode} />\n          </Route>\n    </Switch>\n\n    </div>\n    </Router>\n   </>\n   \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}